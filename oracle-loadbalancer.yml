---
- name: OCI Webserver Loadbalancer
  hosts: localhost
  vars:
    compartmentid: "ocid1.tenancy.oc1..aaaaaaaawkmnjfryshdufax2ar4h4x7ijbnvkcy3kgwun2pcbq7vj6k3xfbq"
    
  tasks:
  - name: Get webserver1 facts
    oci_instance_facts:
      instance_id: "{{ webserver1_id }}"
    register: instance_webserver1

  - name: Set Fact webserver1_public_ip fact
    set_fact:
      webserver1_public_ip: "{{ item.primary_public_ip }}"
    loop: "{{ instance_webserver1.instances }}"

  - name: Get webserver2 facts
    oci_instance_facts:
      instance_id: "{{ webserver2_id }}"
    register: instance_webserver2

  - name: Set Fact webserver2_public_ip fact
    set_fact:
      webserver2_public_ip: "{{ item.primary_public_ip }}"
    loop: "{{ instance_webserver2.instances }}"

  - name: Create Load Balancer
    oci_load_balancer:
      compartment_id: "{{ compartmentid }}"
      name: "website_lb"
      shape_name: "100Mbps"
      subnet_ids:
          - "{{ stat_subnet_id }}"
      state: 'present'
    register: loadbalancer

  - name: Create Load Balancer Backend Set
    oci_load_balancer_backend_set:
      name: "website_lb_backend_set"
      load_balancer_id: "{{ loadbalancer.load_balancer.id }}"
      health_checker:
            interval_in_millis: 30000
            port: 80
            protocol: "HTTP"
            response_body_regex: "^(500|40[1348])$"
            retries: 3
            timeout_in_millis: 6000
            return_code: 200
            url_path: "/healthcheck"
      policy: "LEAST_CONNECTIONS"
      session_persistence_configuration:
        cookie_name: "ansible_backend_set_cookie"
        disable_fallback: True
      state: 'present'

  - name: Create Load Balancer Backend for webserver1
    oci_load_balancer_backend:
      load_balancer_id: "{{ loadbalancer.load_balancer.id }}"
      backend_set_name: "website_lb_backend_set"
      ip_address: "{{ webserver1_public_ip }}"
      port: 80
      backup: False
      drain: False
      offline: False
      weight: 3
      state: 'present'
  
  - name: Create Load Balancer Backend for webserver2
    oci_load_balancer_backend:
      load_balancer_id: "{{ loadbalancer.load_balancer.id }}"
      backend_set_name: "website_lb_backend_set"
      ip_address:  "{{ webserver2_public_ip }}"
      port: 80
      backup: False
      drain: False
      offline: False
      weight: 3
      state: 'present'

  - name: Create Listener for loadbalancer
    oci_load_balancer_listener:
      load_balancer_id: "{{ loadbalancer.load_balancer.id }}"
      name: "website_lb_listener"
      default_backend_set_name: "website_lb_backend_set"
      protocol: "HTTP"
      port: 80
      connection_configuration:
          idle_timeout: 1200
      state: 'present'

  - name: Set Stats loadbalancer_id
    set_stats:
      data:
       loadbalancer_id: "{{ loadbalancer.load_balancer.id }}"