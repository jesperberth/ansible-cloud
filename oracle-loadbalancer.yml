---
- name: OCI Webserver Loadbalancer
  hosts: localhost
  vars:
    compartmentid: "ocid1.tenancy.oc1..aaaaaaaawkmnjfryshdufax2ar4h4x7ijbnvkcy3kgwun2pcbq7vj6k3xfbq"

  tasks:
  - name: Get webserver1 facts
    oci_instance_facts:
      instance_id: "{{ webserver1_id }}"
    register: instance_webserver1

  - name: Set Fact webserver1_public_ip fact
    set_fact:
      webserver1_public_ip: "{{ item.primary_public_ip }}"
    loop: "{{ instance_webserver1.instances }}"

  - debug:
      msg: "{{ webserver1_public_ip }}"

  - name: Get webserver2 facts
    oci_instance_facts:
      instance_id: "{{ webserver2_id }}"
    register: instance_webserver2

  - name: Set Fact webserver2_public_ip fact
    set_fact:
      webserver2_public_ip: "{{ item.primary_public_ip }}"
    loop: "{{ instance_webserver2.instances }}"

  - debug:
      msg: "{{ webserver2_public_ip }}"

  - name: Create Load Balancer
    oci_load_balancer:
      compartment_id: "{{ compartmentid }}"
      name: "website_lb"
#      backend_sets:
#       backend1:
#        backends:
#            - ip_address: "{{ webserver1_public_ip }}"
#              port: "80"
#        health_checker:
#            interval_in_millis: "30000"
#            port: "80"
#            protocol: "HTTP"
#            response_body_regex: "^(500|40[1348])$"
#            retries: "3"
#            timeout_in_millis: "6000"
#            return_code: "200"
#            url_path: "/healthcheck"
#        policy: "LEAST_CONNECTIONS"
      shape_name: "100Mbps"
#      listeners:
#        listerner1:
#          default_backend_set_name: "backend1"
#          port: "80"
#          protocol: "HTTP"
#          hostname_names: ['hostname_001']
#          path_route_set_name: 'test_path_route_set'
      subnet_ids:
          - "{{ stat_subnet_id }}"
      state: 'present'
    register: loadbalencer